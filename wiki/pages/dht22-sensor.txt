====== Wireless Temperature/Humidity Sensor ======
A while back I designed and built a few wireless sensor nodes, to read the temperature and humidity, and publish the values to an MQTT broker, for use in home automation scenarios. Here's how I did it. 

__I understand this is not a complete tutorial, I'll get it updated shortly, and add some pictures..__  

===== Hardware =====
  * ESP8266 Breakout: https://www.adafruit.com/products/2471
  * USB Micro-B Breakout: https://www.adafruit.com/products/1833
  * DHT22 Sensor: https://www.adafruit.com/products/385
  * Custom 3D Printed Case: https://tinkercad.com/things/41RZzc2vLlU
  * Screws for Case: https://www.microfasteners.com/home.php?cat=745
  * Various wires, solder, and hand tools


===== Software =====
Basically what's happening here is, I'm connecting to my home wifi, reading the temperature & humidity from the DHT22, computing the heatindex (from the temperature & humidity), then publishing the values to a MQTT broker on my local network. 

You'll need these libraries installed: 
PubSubClient.h
ESP8266WiFi.h
DHT.h

  * For DHT see this: https://learn.adafruit.com/dht Should have download instructions
  * For pubsubclient, I was using 1.9, found: https://github.com/knolleary/pubsubclient
  * I belive the ESP8266WiFi library was added via the "library manager" in Arduino IDE

----


You'll need to adjust the following for your environment:
  * Wireless AP Name - AP
  * Wireless AP Password - PASSWORD
  * Topic Name - TOPIC
  * MQTT Server IP - X.X.X.X

The Code:
<code:c linenums:1>
#include <PubSubClient.h>
#include <ESP8266WiFi.h>
#include <DHT.h>

// SSID to connect to
const char *ssid = "AP";

// Password for SSID
const char *password = "PASSWORD";

// Topics to publish humidity and temperature too
char *topic[3] = { "TOPIC/humidity", "TOPIC/temp", "TOPIC/heatindex" };

// IP address of mqtt server
char *server = "X.X.X.X";

// Name of this client
String clientName = "Arduino-TOPIC-ESP"; 

// what pin we're connected to
#define DHTPIN 5

// what type of dht
#define DHTTYPE DHT11

DHT dht(DHTPIN, DHTTYPE,15);

WiFiClient wifiClient;

void callback(char *topic, byte *payload, unsigned int length) {
  return;
}

PubSubClient client(server, 1883, callback, wifiClient);

void setup() {
  int i = 0;

  Serial.begin(115200);
  delay(10);
  dht.begin();

  Serial.println();
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.begin(ssid, password);
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  Serial.println("");
  Serial.println("WiFi connected"); 
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());

  Serial.print("Connecting to ");
  Serial.print(server);
  Serial.print(" as ");
  Serial.println(clientName);

  if (client.connect((char *)clientName.c_str())) {
    Serial.println("Connected to MQTT broker");
  } else {
    Serial.println("MQTT connect failed");
    Serial.println("Will reset and try again...");
    abort();
  }
}

void loop() {
  int i = 0;
  float h = 0;
  float t = 0;
  float hi = 0;
  String reading[3];

  reading[0] = h = dht.readHumidity();
  reading[1] = t = dht.readTemperature(true);
  
  if (isnan(h) || isnan(t)) {
    Serial.println("Failed to read from DHT sensor!");
    return;
  }

  reading[2] = hi = dht.computeHeatIndex(t, h);

  Serial.print("Humidity: ");
  Serial.println(reading[0]);
  Serial.print("Temperature: ");
  Serial.println(reading[1]);
  Serial.print("Heat Index: ");
  Serial.println(reading[2]);
  
  if (client.connected()){
    // send humidity
    if (client.publish(topic[0], (char *)reading[0].c_str())) {
      Serial.print("Published humidity to ");
      Serial.println(topic[0]);
    } else {
      Serial.print("Failed to publish humidity to ");
      Serial.println(topic[0]);
    }

    // send temperature
    if (client.publish(topic[1], (char *)reading[1].c_str()))  {
      Serial.print("Published temperature to ");
      Serial.println(topic[1]);
    } else {
      Serial.print("Failed to publish temperature to ");
      Serial.println(topic[1]);
    }

    // send heat index
    if (client.publish(topic[2], (char *)reading[2].c_str()))  {
      Serial.print("Published heat index to ");
      Serial.println(topic[2]);
    } else {
      Serial.print("Failed to publish heat index to ");
      Serial.println(topic[2]);
    }
  } else {
    if (client.connect((char *)clientName.c_str())) {
      Serial.println("Connected to MQTT broker");
    }
  }

  delay(15000);
}
</code>




----
====== Comments ======
~~DISQUS~~