====== Home Assistant ======
Home Assistant is an open-source home automation platform running on Python 3. Track and control all devices at home and automate control. 

It has a very extensive, and constantly growing set of supported [[https://home-assistant.io/components/|components]]. It's well documented, and fairly easy to [[https://home-assistant.io/getting-started/|setup]]. 

To take a look at my complete setup, checkout my Home Assistant github [[https://github.com/xstrex/HAConfig-v2|repo]].

----

===== Customizations =====
Below are a few of the customizations I've made to my Home Assistant install. 

----

==== Fully TTS Script ====
Recently I developed a script to send messages from HA to the [[https://www.ozerov.de/fully-kiosk-browser/|Fully]] app, to be played as TTS. This way you can make the tablets around your house, talk. Which is quite fun. Like having your house tell you when the dishes are done, or any important reminders you may have forgotten about. 

The script is fairly simple, and runs on the command line, with the following syntax: 
<code:bash>
./fully_tts.sh -h [hostname/IP] -p [password for fully] -m "message you'd like spoken"
</code>

It can be found on my GitHub page:
{{gh>https://github.com/xstrex/BashSnips/blob/master/fully_tts.sh}}

----

==== Custom Log Files ====
By default Home Assistant writes log messages to 2 locations. The first is written to Home Assistants config directory, with is defined during installation. The second, more chatty log is written directly to syslog. Here's how I isolated the syslog messages to their own dedicated log file. 

  - Create a new config file for rsyslogd with the follow contents. 
    - sudo vi /etc/rsyslog.d/00-hass.conf
    - <code:bash linenums:1>if $programname == 'hass' then /var/log/hass/hass.log
& ~</code>
    - Save and quit the file. 

This will filter out all messages going to syslog that match the program name "hass", which is what Home Assistant runs as, then instead write them to /var/log/hass/hass.log. Finally the "& ~" will tell syslog not to log "hass" messages anywhere else, but /var/log/hass/hass.log. Without this, the messages will still go to your default syslog file. 

Additionally I've setup a log rotate rule to automatically rotate the above log on a daily basis, compressing them, and keeping a weeks worth of logs on hand. 

  - Create a logrotate config file, with the following contents.
    - sudo vi /etc/logrotate.d/hass
    - <code:bash linenums:1>/var/log/hass/hass.log {
        rotate 7
        daily
        minsize 1M
        missingok
        create 640 syslog adm
        notifempty
        compress
        delaycompress
        postrotate
                invoke-rc.d home-assistant reload > /dev/null
        endscript
}</code>
    - Save and quit the file. 

Lastly, you'll need to create the log file location, the initial log file, and set permissions so that rsyslogd can write to it. That can be done like this: 
<code:bash linenums:1>sudo mkdir /var/log/hass && sudo chown syslog:adm /var/log/hass && sudo touch /var/log/hass/hass.log</code>
Now all you need to do is, restart rsyslogd, with the following command. <code:bash linenums:1>systemctl restart rsyslog</code>

All done, now you can watch your new log file for updates with: <code:bash linenums:1>sudo tail -f /var/log/hass/hass.log</code>


----
===== Comments =====
~~DISQUS~~